(deflisten workspace "scripts/workspace")
(defvar powermenu false)
(defvar volume_toggle false)
(defvar cal_toggle true)
(defvar playing false)
(defvar wallpaper -1)
(defpoll volume :interval "1s" "scripts/getvol")
(defpoll time :interval "5s" "date '+%H:%M'")
(defpoll day :interval "1h" "date '+%d'")
(defpoll month :interval "1h" "date '+%m'")
(defpoll year :interval "1h" "date '+%Y'")
(defpoll song :interval "1s" "scripts/getsong")
(defpoll day_week :interval "1h" "date '+%^A'")
(defpoll date :interval "1h" "date '+%d - %^B - %Y'")

; Main bar

(defwindow bar 
	:geometry
	(
		geometry
		:anchor "top center"
		:x "0"
		:y "4"
		:width "99%"
		:height "3%"
	)

	:stacking "fg"
	:exclusive "true"
	:focusable: "false"
	
	(panel)
)

(defwidget panel[]
	(box
		:class "panel"
		(box
			:halign "start"
			:class "part"
			:style "border-radius: 0 50px 50px 0; padding-left: 0"
			(workspaces)
		)
		(box
			:class "part"
			:halign "center"
			(music)
		)
		(box
			:class "part"
			:style "border-radius: 50px 0 0 50px; padding-right: 0"
			:halign "end"
			:space-evenly "false"
			:spacing "5"
			(wallpaper_changer)
			(separator)
			(volume)
			(separator)
			(date)
			(separator)
			(launcher)
		)
	)
)

(defwidget separator[]
	(box
		:class "separator"
		"|"
	)
)

(defwidget music[]
	(eventbox
		:onclick "playerctl play-pause -p spotify && scripts/getsong"
		:onscroll "scripts/songcontrol {}"
		:class "music playing-${playing}"
		song
	)
)

(defwidget workspaces[]
	(literal
		:class "workspaces"
		:content 
		workspace
	)
)

(defwidget wallpaper_changer[]
	(button
		:class "wallpaper"
		:onclick "sh /home/ojornag/wallpapers/wallpaper.sh ${wallpaper} &"
		"󰄄"
	)
)

(defwidget volume[]
	(eventbox
		:onhover "eww update volume_toggle=true"
		:onhoverlost "eww update volume_toggle=false"
		(box
			:space-evenly "false"
			:class "volume"
			"󰕾"
			(revealer
				:transition "slideright"
				:reveal volume_toggle
				:class "metric"
				(scale
					:width 100
					:min 0
					:max 100
					:active true
					:value volume
					:onchange "pulseaudio-ctl set {}"
				)
			)
		)
	)
)

(defwidget date[]
	(eventbox
		:class "time"
		:onclick "scripts/calendar"
		time
	)
)

(defwidget launcher[]
	(eventbox
		:onhover "eww update powermenu=true"
		:onhoverlost "eww update powermenu=false"
		:halign "end"
		:class "powermenu"
		(box
			:space-evenly "false"
			(revealer
				:transition "slideleft"
				:reveal powermenu
				(box
					(button
						:class "power"
						:onclick "systemctl suspend"
						""
					)
					(button
						:class "power"
						:onclick "loginctl kill-session self"
						""
					)
					(button
						:class "power"
						:onclick "reboot"
						""
					)
				)
			)
			(button
				:class "power"
				:onclick "poweroff"
				""
			)
		)
	)
)

; Status widget

(defwindow status_window
	:geometry
	(
		geometry
		:anchor "top center"
		:width "20%"
		:height "25%"
		:y "300"
	)
	:stacking "bg"
	:namespace ""
	(status)
)

(defwidget status[]
	(box
		:orientation "v"
		:class "status"
		day_week
		(box
			:class "status-time"
			time
		)
		(box
			:class "status-date"
			date
		)
	)
)

; Calendar

(defwindow calendar_window
	:geometry
	(
		geometry
		:anchor "top right"
		:x "20"
		:y "4"
		:width "10%"
		:height "4%"
	)

	:stacking "fg"
	:exclusive "false"
	:focusable: "false"
	(cal)
)

(defwidget cal[]
	(calendar
		:class "cal"
		:day day
		:month month
		:year year
	)
)
